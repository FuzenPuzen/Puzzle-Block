using Zenject;
using UnityEngine;
#NOTRIM#
public class #SCRIPTNAME# : MonoBehaviour
{
#NOTRIM#
[SerializeField] private Button _restartButton;
public Action OnRestartButtonAction;
#NOTRIM#
private void Awake()
{        
    _restartButton.onClick.AddListener(OnRestart);
}
#NOTRIM#
private void OnRestart()
{
    OnRestartButtonAction?.Invoke();
}
#NOTRIM#
public void HideView()
{
    gameObject.SetActive(false);
}
#NOTRIM#
public void ShowView()
{
    gameObject.SetActive(true);
}
#NOTRIM#
}
#NOTRIM#
public class #SCRIPTNAME#Service : IService
{
	[Inject] private IViewFabric _viewFabric;
	private #SCRIPTNAME# _#SCRIPTNAME#;
    	[Inject] private IMarkerService _markerService;
	#NOTRIM#
	public void ActivateService()
	{       
		Transform parent = _markerService.GetMarker<>().transform;
        	_#SCRIPTNAME# = _viewFabric.Init<#SCRIPTNAME#>(parent);
	}
	#NOTRIM#
	public void HideView()
	{
    		_#SCRIPTNAME.HideView();
	}
	#NOTRIM#
	public void ShowView()
	{
    		_#SCRIPTNAME.ShowView();
	}
}
